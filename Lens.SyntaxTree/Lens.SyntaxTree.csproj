<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7987774D-17A7-4E76-AE13-C03F2CC31B9C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Lens.SyntaxTree</RootNamespace>
    <AssemblyName>Lens.SyntaxTree</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ParseException.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SyntaxTree\ControlFlow\CatchNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\CodeBlockNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\ConditionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\RecordDefinitionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\ThrowNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\TypeDefinitionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\TypeDefinitionNodeBase.cs" />
    <Compile Include="SyntaxTree\ControlFlow\UsingNode.cs" />
    <Compile Include="SyntaxTree\Expressions\GetIndexNode.cs" />
    <Compile Include="SyntaxTree\Expressions\GetMemberNode.cs" />
    <Compile Include="SyntaxTree\Expressions\IndexNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\InvocationNode.cs" />
    <Compile Include="SyntaxTree\Expressions\MemberNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\SetIndexNode.cs" />
    <Compile Include="SyntaxTree\Expressions\SetMemberNode.cs" />
    <Compile Include="SyntaxTree\Expressions\ValueListNodeBase.cs" />
    <Compile Include="SyntaxTree\Operators\AddOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\BooleanOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\CastOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\DivideOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\ComparisonOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\InversionOperator.cs" />
    <Compile Include="SyntaxTree\Operators\NegationOperator.cs" />
    <Compile Include="SyntaxTree\Operators\MultiplyOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\OperatorNodeBase.cs" />
    <Compile Include="SyntaxTree\Operators\PowOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\RemainderOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\SubtractOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\TypeofOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\UnaryOperatorNodeBase.cs" />
    <Compile Include="SyntaxTree\RootNode.cs" />
    <Compile Include="Utils\FunctionArgument.cs" />
    <Compile Include="SyntaxTree\ControlFlow\FunctionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\NamedFunctionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\LetNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\LoopNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\NameDeclarationBase.cs" />
    <Compile Include="SyntaxTree\ControlFlow\TryCatchNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\VarNode.cs" />
    <Compile Include="SyntaxTree\Expressions\InvocationNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\NewArrayNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewDictionaryNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewListNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewObjectNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewTupleNode.cs" />
    <Compile Include="SyntaxTree\Literals\BooleanNode.cs" />
    <Compile Include="SyntaxTree\Literals\DoubleNode.cs" />
    <Compile Include="SyntaxTree\Literals\IntNode.cs" />
    <Compile Include="SyntaxTree\Literals\LiteralNodeBase.cs" />
    <Compile Include="SyntaxTree\Literals\StringNode.cs" />
    <Compile Include="SyntaxTree\Literals\UnitNode.cs" />
    <Compile Include="SyntaxTree\NodeBase.cs" />
    <Compile Include="SyntaxTree\Operators\BinaryOperatorNodeBase.cs" />
    <Compile Include="Utils\DictionaryExtensions.cs" />
    <Compile Include="Utils\TypeSignature.cs" />
    <Compile Include="Unit.cs" />
    <Compile Include="Utils\HashList.cs" />
    <Compile Include="Utils\StringExtensions.cs" />
    <Compile Include="Utils\LexemLocation.cs" />
    <Compile Include="Utils\LexicalNameInfo.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>